{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs\"","webpack:///./res/custom-reporter.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","fs","constructor","globalConfig","options","this","_globalConfig","_options","onTestResult","test","testResult","aggregatedTestResult","testResults","forEach","runData","failureMessages","length","contents","fullName","duration","map","message","writeToLog","testName","path","onRunComplete","contexts","results","date","Date","toISOString","existsSync","mkdirSync","appendFileSync","replace"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,uBClFAhC,EAAAD,QAAAkC,QAAA,wCCAA,MAAMC,EAAKD,EAAQ,GAwDnBjC,EAAOD,QAtDP,MACIoC,YAAYC,EAAcC,GACxBC,KAAKC,cAAgBH,EACrBE,KAAKE,SAAWH,EAKpBI,aAAaC,EAAMC,EAAYC,GAY3BD,EAAWE,YACVC,QAAQC,IAEL,GAAsC,IAAnCA,EAAQC,gBAAgBC,OAAc,CACvC,MAAMC,gBACYH,EAAQI,yBAAyBJ,EAAQK,uDAEnDL,EAAQC,gBACPK,IAAIC,GAAWA,EAAU,QAElChB,KAAKiB,WAAW,CACZC,SAAUT,EAAQI,SAClBD,WACAO,KAAO,yBAMrBC,cAAcC,EAAUC,IAMxBL,YAAWL,SAACA,EAADO,KAAWA,EAAXD,SAAiBA,IAC1B,MAAMK,GAAO,IAAIC,MAAOC,cACpB7B,EAAG8B,WAAWP,IACdvB,EAAG+B,UAAUR,GAEjBvB,EAAGgC,kBAAkBT,KAAQD,KAAYK,QAAWM,QAAQ,MAAO,KAAMjB","file":"custom-reporter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 169);\n","module.exports = require(\"fs\");","const fs = require('fs');\n\nclass CustomReporter {\n    constructor(globalConfig, options) {\n      this._globalConfig = globalConfig;\n      this._options = options;\n    }\n    \n  //Seems to run after test suite is completed rather than\n  //after each individual test\n  onTestResult(test, testResult, aggregatedTestResult) {\n      //Error message seems to be in testResult.failureMessage\n      //Not sure this is a suitable place to screenshot\n      //Would have to pass browser object in.\n      //Could always take the screenshot during test.\n      //Bit more faff for tester to set-up though\n      //Also know 100% that code in here will be called regardless of success/failure\n      //Still need to somehow access browser object from in here for this to work\n\n      //testResult contains results for entire test suite.\n      //Failure message can be got from testResult.testResults -> {failureMessages}\n      //fullName and title are found in the same place.\n      testResult.testResults\n      .forEach(runData => {\n          //Only log if there are error messages to report\n          if(runData.failureMessages.length !== 0) {\n            const contents = \n                `Test name: ${runData.fullName}\\nTime taken: ${runData.duration}\\nFailure Messages:       \n                ${\n                    runData.failureMessages\n                    .map(message => message + '\\n')\n                }`;\n            this.writeToLog({\n                testName: runData.fullName,\n                contents,\n                path: `test-results/Logs`\n            });\n          }\n      });\n  }\n\n  onRunComplete(contexts, results) {\n      // console.log(contexts);\n      // console.log(results);\n      // console.log(this._globalConfig.testFailureExitCode);\n  }\n\n  writeToLog({contents, path, testName}) {\n    const date = new Date().toISOString();\n    if(!fs.existsSync(path)) {\n        fs.mkdirSync(path);\n    }\n    fs.appendFileSync(`${path}/${testName}:${date}.txt`.replace(/\\s/g, \".\"), contents);  \n    }\n}\n  \nmodule.exports = CustomReporter;\n"],"sourceRoot":""}